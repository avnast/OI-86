#cloud-config
coreos:
  update:
    reboot-strategy: "off"
  units:
    - name: cfn-etcd-environment.service
      enable: true
      command: start
      runtime: true
      content: |
        [Unit]
        Description=Configures EBS volume and R53 record set for this node and derives env vars for etcd bootstrap
        After=network-online.target
        Before=format-etcd2-volume.service

        [Service]
        EnvironmentFile=/var/run/coreos/etcd-node.env
        Restart=on-failure
        RemainAfterExit=true
        ExecStartPre=/opt/bin/cfn-etcd-environment
        ExecStartPre=/usr/bin/mv -f /var/run/coreos/etcd-environment /etc/etcd-environment
        ExecStart=/bin/true
        TimeoutStartSec=120

        [Install]
        RequiredBy=format-etcd2-volume.service


    - name: etcdadm-reconfigure.service
      enable: true
      content: |
        [Unit]
        Description=etcdadm reconfigure runner
        BindsTo=etcd-member.service
        Before=etcd-member.service
        Wants=cfn-etcd-environment.service
        After=cfn-etcd-environment.service
        After=network.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        RestartSec=5
        EnvironmentFile=-/etc/etcd-environment
        EnvironmentFile=-/var/run/coreos/etcdadm-environment
        ExecStartPre=/usr/bin/systemctl is-active cfn-etcd-environment.service
        ExecStartPre=/usr/bin/mkdir -p /var/run/coreos/etcdadm/snapshots
        ExecStart=/opt/bin/etcdadm reconfigure
        TimeoutStartSec=120

        [Install]
        WantedBy=cfn-etcd-environment.service

    - name: etcdadm-update-status.service
      enable: true
      content: |
        [Unit]
        Description=etcdadm update status
        BindsTo=etcd-member.service
        After=etcd-member.service
        After=network.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        RestartSec=5
        EnvironmentFile=-/etc/etcd-environment
        EnvironmentFile=-/var/run/coreos/etcdadm-environment
        ExecStart=/opt/bin/etcdadm member_status_set_started
        TimeoutStartSec=120

    - name: etcdadm-check.service
      enable: true
      content: |
        [Unit]
        Description=etcd health check

        [Service]
        Type=oneshot
        EnvironmentFile=-/etc/etcd-environment
        EnvironmentFile=-/var/run/coreos/etcdadm-environment
        ExecStartPre=/usr/bin/systemctl is-active etcd-member.service
        ExecStart=/opt/bin/etcdadm check
        TimeoutStartSec=120

    

    - name: etcdadm-save.service
      enable: true
      content: |
        [Unit]
        Description=etcd snapshot

        [Service]
        Type=oneshot
        EnvironmentFile=-/etc/etcd-environment
        EnvironmentFile=-/var/run/coreos/etcdadm-environment
        ExecStartPre=/usr/bin/systemctl is-active etcd-member.service
        ExecStart=/opt/bin/etcdadm save
        TimeoutStartSec=300

    

    - name: etcd-member.service
      drop-ins:
        - name: 20-aws-cluster.conf
          content: |
            [Unit]
            Wants=cfn-etcd-environment.service
            After=cfn-etcd-environment.service
            Wants=decrypt-assets.service
            After=decrypt-assets.service
            
            BindsTo=etcdadm-reconfigure.service etcdadm-update-status.service
            After=etcdadm-reconfigure.service
            Before=etcdadm-update-status.service
            [Service]
            EnvironmentFile=-/etc/etcd-environment
            EnvironmentFile=-/var/run/coreos/etcdadm/etcd-member.env

            PermissionsStartOnly=true
            ExecStartPre=/usr/bin/systemctl is-active cfn-etcd-environment.service
            ExecStartPre=/usr/bin/systemctl is-active decrypt-assets.service
            ExecStartPre=/usr/bin/chown -R etcd:etcd /var/lib/etcd2
        
        - name: 40-version.conf
          content: |
            [Service]
            Environment="ETCD_IMAGE_TAG=v3.2.10"
        
      enable: true
      command: start

    - name: var-lib-etcd2.mount
      enable: true
      content: |
        [Unit]
        Before=etcd-member.service

        [Mount]
        What=/dev/xvdf
        Where=/var/lib/etcd2
        Type=ext4

        [Install]
        RequiredBy=etcd-member.service

    - name: format-etcd2-volume.service
      enable: true
      content: |
        [Unit]
        Description=Formats etcd2 ebs volume
        After=dev-xvdf.device
        Requires=dev-xvdf.device
        Before=var-lib-etcd2.mount

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/opt/bin/ext4-format-volume-once /dev/xvdf

        [Install]
        RequiredBy=var-lib-etcd2.mount


    - name: decrypt-assets.service
      enable: true
      content: |
        [Unit]
        Description=decrypt etcd2 tls assets using amazon kms
        Before=etcd-member.service

        [Service]
        Restart=on-failure
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/rkt run \
          --uuid-file-save=/var/run/coreos/decrypt-assets.uuid \
          --volume=ssl,kind=host,source=/etc/ssl/certs,readOnly=false \
          --mount=volume=ssl,target=/etc/ssl/certs \
          --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true \
          --mount volume=dns,target=/etc/resolv.conf \
          --net=host \
          --trust-keys-from-https \
        quay.io/coreos/awscli:master --exec=/bin/bash -- \
            -ec \
            'echo decrypting tls assets; \
             shopt -s nullglob; \
             for encKey in /etc/ssl/certs/*.pem.enc; do \
             echo decrypting $encKey; \
             /usr/bin/aws \
               --region us-west-2 kms decrypt \
               --ciphertext-blob fileb://$encKey \
               --output text \
               --query Plaintext \
             | base64 -d > $${encKey%.enc}; \
             done; \
             echo done.'
        ExecStart=-/usr/bin/rkt rm --uuid-file=/var/run/coreos/decrypt-assets.uuid

        [Install]
        RequiredBy=etcd-member.service



    - name: cfn-signal.service
      command: start
      content: |
        [Unit]
        Wants=etcd-member.service
        After=etcd-member.service

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=10

        EnvironmentFile=/var/run/coreos/etcd-node.env
        ExecStartPre=/usr/bin/systemctl is-active etcd-member.service
        ExecStartPre=/usr/bin/rkt fetch quay.io/coreos/awscli:master
        ExecStart=-/opt/bin/cfn-signal




write_files:
  - path: /etc/ssh/sshd_config
    permissions: 0600
    owner: root:root
    content: |
      UsePrivilegeSeparation sandbox
      Subsystem sftp internal-sftp
      ClientAliveInterval 180
      UseDNS no
      UsePAM yes
      PrintLastLog no # handled by PAM
      PrintMotd no # handled by PAM
      PasswordAuthentication no
      ChallengeResponseAuthentication no

  - path: /opt/bin/cfn-init-etcd-server
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -vxe

      cfn-init -v -c "etcd-server" --region us-west-2 --resource Etcd$KUBE_AWS_ETCD_INDEX --stack $KUBE_AWS_STACK_NAME

  - path: /opt/bin/attach-etcd-volume
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -vxe

      # To omit the `--region us-west-2` flag for every aws-cli invocation
      export AWS_DEFAULT_REGION=us-west-2

      instance_id=$(curl http://169.254.169.254/latest/meta-data/instance-id)
      az=$(curl http://169.254.169.254/latest/meta-data/placement/availability-zone)

      # values shared between cloud-config-etcd and stack-template.json
      stack_name=$KUBE_AWS_STACK_NAME
      name_tag_key="kube-aws:etcd:name"
      advertised_hostname_tag_key="kube-aws:etcd:advertised-hostname"
      eip_allocation_id_tag_key="kube-aws:etcd:eip-allocation-id"
      network_interface_id_tag_key="kube-aws:etcd:network-interface-id"

      etcd_index=$KUBE_AWS_ETCD_INDEX

      state_prefix=/var/run/coreos/etcd-volume
      output_prefix=/var/run/coreos/
      common_volume_filter="Name=tag:aws:cloudformation:stack-name,Values=$stack_name Name=tag:kube-aws:etcd:index,Values=$etcd_index"

      export $(cat /var/run/coreos/etcd-environment | grep -v ^# | xargs)

      export | grep ETCD

      # TODO: Locate the corresponding EBS volume via a tag on the ASG managing this EC2 instance
      # See https://github.com/coreos/kube-aws/pull/332#issuecomment-281531769

      # Skip the `while` block below when the EBS volume is already attached to this EC2 instance
      aws ec2 describe-volumes \
        --filters $common_volume_filter Name=attachment.instance-id,Values=$instance_id \
        | jq -r '([] + .Volumes)[0]' \
        > ${state_prefix}.json

      attached_vol_id=$(
        cat ${state_prefix}.json \
          | jq -r '"" + .VolumeId'
      )

      # Decide which volume to attach hence hostname to assume
      while [ "$attached_vol_id" = "" ]; do
        sleep 3

        aws ec2 describe-volumes \
          --filters $common_volume_filter Name=status,Values=available Name=availability-zone,Values=$az \
          > ${state_prefix}-candidates.json

        cat ${state_prefix}-candidates.json \
          | jq -r '([] + .Volumes)[0]' \
          > ${state_prefix}.json

        candidate_vol_id=$(
          cat ${state_prefix}.json \
            | jq -r '"" + .VolumeId'
        )

        if [ "$candidate_vol_id" = "" ]; then
          echo "[bug] no etcd volume found" 1>&2
          exit 1
        fi

        # See http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html for device naming
        if aws ec2 attach-volume --volume-id $candidate_vol_id --instance-id $instance_id --device "/dev/xvdf"; then
          attached_vol_id=$candidate_vol_id
        fi
      done

      # Wait until the volume attachment completes
      until [ "$volume_status" = ok ]; do
        sleep 3
        describe_volume_status_result=$(aws ec2 describe-volume-status --volume-id $attached_vol_id)
        volume_status=$(echo "$describe_volume_status_result" | jq -r "([] + .VolumeStatuses)[0].VolumeStatus.Status")
      done

      cat ${state_prefix}.json \
        | jq -r "([] + .Tags)[] | select(.Key == \"$name_tag_key\").Value" \
        > ${output_prefix}name

      cat ${state_prefix}.json \
        | jq -r "([] + .Tags)[] | select(.Key == \"$advertised_hostname_tag_key\").Value" \
        > ${output_prefix}advertised-hostname

      cat ${state_prefix}.json \
        | jq -r "([] + .Tags)[] | select(.Key == \"$eip_allocation_id_tag_key\").Value" \
        > ${output_prefix}eip-allocation-id

      cat ${state_prefix}.json \
        | jq -r "([] + .Tags)[] | select(.Key == \"$network_interface_id_tag_key\").Value" \
        > ${output_prefix}network-interface-id

  

  - path: /opt/bin/assume-advertised-hostname-with-eip
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -vxe

      # To omit the `--region us-west-2` flag for every aws-cli invocation
      export AWS_DEFAULT_REGION=us-west-2

      instance_id=$(curl http://169.254.169.254/latest/meta-data/instance-id)
      eip_alloc_id=$1

      aws ec2 associate-address --instance-id $instance_id --allocation-id $eip_alloc_id

      curl http://169.254.169.254/latest/meta-data/public-hostname

      curl http://169.254.169.254/latest/meta-data/local-ipv4 > /var/run/coreos/listen-private-ip

  - path: /opt/bin/append-etcd-server-env
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -vxe

      private_ip=$(cat /var/run/coreos/listen-private-ip)
      name=$(cat /var/run/coreos/name)
      advertised_hostname=$(cat /var/run/coreos/advertised-hostname)

      echo "KUBE_AWS_ASSUMED_HOSTNAME=$advertised_hostname
      ETCD_NAME=$name
      ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd-trusted-ca.pem
      ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd.pem
      ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd-key.pem

      ETCD_CLIENT_CERT_AUTH=true
      ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd-trusted-ca.pem
      ETCD_CERT_FILE=/etc/ssl/certs/etcd.pem
      ETCD_KEY_FILE=/etc/ssl/certs/etcd-key.pem

      ETCD_INITIAL_CLUSTER_STATE=new
      ETCD_DATA_DIR=/var/lib/etcd2
      ETCD_LISTEN_CLIENT_URLS=https://$private_ip:2379
      ETCD_ADVERTISE_CLIENT_URLS=https://$advertised_hostname:2379
      ETCD_LISTEN_PEER_URLS=https://$private_ip:2380
      ETCD_INITIAL_ADVERTISE_PEER_URLS=https://$advertised_hostname:2380" >> /var/run/coreos/etcd-environment

  - path: /opt/bin/cfn-etcd-environment
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -e

      run() {
        rkt run \
           --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true \
           --mount volume=dns,target=/etc/resolv.conf \
           --volume=awsenv,kind=host,source=/var/run/coreos,readOnly=false \
           --mount volume=awsenv,target=/var/run/coreos \
           --volume=optbin,kind=host,source=/opt/bin,readOnly=false \
           --mount volume=optbin,target=/opt/bin \
           --uuid-file-save=/var/run/coreos/$1.uuid \
           --set-env=KUBE_AWS_STACK_NAME=$KUBE_AWS_STACK_NAME \
           --set-env=KUBE_AWS_ETCD_INDEX=$KUBE_AWS_ETCD_INDEX \
           --net=host \
           --trust-keys-from-https \
           quay.io/coreos/awscli:master --exec=/opt/bin/$1 -- $2

           rkt rm --uuid-file=/var/run/coreos/$1.uuid || :
        }

      run cfn-init-etcd-server
      run attach-etcd-volume

      eip_allocation_id=$(cat /var/run/coreos/eip-allocation-id)
      network_interface_id=$(cat /var/run/coreos/network-interface-id)
      if [ "$eip_allocation_id" != "" ]; then
        run assume-advertised-hostname-with-eip $eip_allocation_id
      elif [ "$network_interface_id" != "" ]; then
        run assume-advertised-hostname-with-eni $network_interface_id
        /opt/bin/reconfigure-ip-routing
      else
        echo '[bug] neither eip_allocation_id nor network_interface_id for this node found'
      fi

      run append-etcd-server-env

      /usr/bin/sed -i "s/^ETCDCTL_ENDPOINT.*$/ETCDCTL_ENDPOINT=https:\/\/$(cat /var/run/coreos/advertised-hostname):2379/" /etc/environment

  - path: /opt/bin/etcdadm
    permissions: 0755
    encoding: gzip+base64
    content: 

  - path: /etc/environment
    permissions: 0644
    content: |
      COREOS_PUBLIC_IPV4=$public_ipv4
      COREOS_PRIVATE_IPV4=$private_ipv4
      ETCDCTL_CA_FILE=/etc/ssl/certs/etcd-trusted-ca.pem
      ETCDCTL_CERT_FILE=/etc/ssl/certs/etcd-client.pem
      ETCDCTL_KEY_FILE=/etc/ssl/certs/etcd-client-key.pem
      ETCDCTL_ENDPOINT=

  - path: /opt/bin/ext4-format-volume-once
    permissions: 0700
    owner: root:root
    content: |
      #!/bin/bash -e
      if [[ "$(wipefs -n -p $1 | grep ext4)" == "" ]];then
        mkfs.ext4 $1
      else
        echo "volume $1 is already formatted"
      fi


  - path: /opt/bin/cfn-signal
    owner: root:root
    permissions: 0700
    content: |
      #!/bin/bash -e

      rkt run \
        --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true \
        --mount volume=dns,target=/etc/resolv.conf \
        --volume=awsenv,kind=host,source=/var/run/coreos,readOnly=false \
        --mount volume=awsenv,target=/var/run/coreos \
        --uuid-file-save=/var/run/coreos/cfn-signal.uuid \
        --set-env=KUBE_AWS_STACK_NAME=$KUBE_AWS_STACK_NAME \
        --set-env=KUBE_AWS_ETCD_INDEX=$KUBE_AWS_ETCD_INDEX \
        --net=host \
        --trust-keys-from-https \
        quay.io/coreos/awscli:master --exec=/bin/bash -- \
          -vxec \
          '
           cfn-signal -e 0 --region us-west-2 --resource Etcd$KUBE_AWS_ETCD_INDEX --stack $KUBE_AWS_STACK_NAME
          '

      rkt rm --uuid-file=/var/run/coreos/cfn-signal.uuid || :




  - path: /etc/ssl/certs/etcd-trusted-ca.pem
    encoding: gzip+base64
    content: H4sIAAAAAAAA/2SUy66qSBSG5zxFz01HEOQyOIOCqoJCrlqAMAPcgoByUwt5+s7eJ92ddNfwSyX/Sr5/rT+/n45M4v1hoCMlmBiAoh/KuYQYMjQMcDEqwIgOKqIDCDy9ase6vZka43UQzhhA0LlHxCBLYRyGB8Tq6ZLYHeckWCxXFLpAMoEQIbC4Vi7Gt+wkNCkFX5jxiw/Bx6Xp4tJo765djhn/+c3Chfsbuka0IAoCvfJiHfTUMJ9Ceo+e6fmyukfAYPWTDBG7/CQ7iVe7hOgcaf47LsIA+AYIVfD9wagOBggR0AQPOLwvJ9HX7brvCtYJhR0IFlc6aUPDvrjfqrLFgba9ZINfOuMtFEyDHU1tL+/TryUPt08hnILVnNi5uh3aTW122cvacAo6Dcimnf9JPKjGb8lBAd/wUIL1HJR4ltPrjN/TQaSr71i6MARyZlb39rjr6EYVAVfocXYeO3yQkhGfbeE5NfAUaGebp88DExWrCLBwKdiYKLUV2yL1Z88Y/IuTpg9lm1XcIuJHQ125KF8NO5l9fI2FU71F9td823Ry/7rZ2geufbrfYjs+DguQzp/U5xnuLKdTau6gDhvtDqF3zwNG95bs3QPi56wib5x9evzpC/WpQAybvTRda5qHmyppx7eltM+WEciBEOj9x2WEAv9boRWqOriqSAeuAcbwd3GOPAWhtdVBxABD+nb91xz3T9N+1CGgSvjqB16vgks0GcaKLsXU4tPS3GWFHCSyKdN2hUbSnM76GIk6B1MCkIres1TJF5YNd82asmKeibfWK8lKbdKWNHscb/W13/kq2Wazzb+wJ7+Vy/SQB64TXHcM9uUudqFVvfR3mEXwRWTzhnm6eDZQtrVRvkcp50H4XFDn+K4Bx66oeaJEc8jdt7uz9ABDXM9vsRAETQAkpxF0xkDc50epUMVVO+a3yHScjgXrvHiNNuUrjctPmKcapypDn/Tu8HgBF/HRfqVDd576NZXIg8bKKt9t86TOyLOsuD2N01HobRScklZ+7JrZzzgRqSCMP16ubB6havL4qnrJLpjwXJQ4sqf8MPT76tcv7mf7kQf/fxH+CgAA//9gbVeeLgQAAA==

  - path: /etc/ssl/certs/etcd-key.pem.enc
    encoding: gzip+base64
    content: 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

  - path: /etc/ssl/certs/etcd.pem
    encoding: gzip+base64
    content: H4sIAAAAAAAA/2SUO7OCvBqFe37F6Z0z3EShTEjEgIEdLiJ0AlvCRREFo/z6M+7TfDPfW66nWMW75vnv9yB2iP8fG4cx2REbxPgvlSghiCy2Deq5BoJAUBMCWblL3rqzXScCscz1hpzwV+kDhg+QAeHGOKTAdICaYMnmlJz1Y5NHKq90+sYIBLD2jxDQGGqTml2TKdOw2PPSp3EtaIs1GmM1iKmR8tKXaNz9I2TvtAU3GmKBRIaOjHlY8EeVuv0h3enlgiMKwV8zeFP3WyzlkdpXjt9RQiBpgQ/rbuRd41hCgYDhHQCBDZgJvtyuPRswDKa4+cgcqY4ZzFLily99zsJejKskfsA1D365v/Q6NyqvWH22lP/qK0PbKKSqgX9VCtcoN/fddkwicwwsiTNo28MKvgzjuXVpeBGavRW/rd9Nq/iVul31jn6r5w5+MmdbhOllvGzQ2VOb2TYb+fORYqS9grE6rFtksJOvsGqMkrq5V/nB2W/6lJyfJ+4pj/Ew9N1xXwS90T3s02XWsivCM5dOj1A79s+LPf2+D8XHBIrYo6XFJmwsq/ChGFaRaXFHez+Q74DXXfWFDjFxr6ammNyX+nYM+7oAbL1slGX0F+XS9kp2oQ6XA8q8RbXKwtWWpR2DiPrRpu6mdqF5vvjnsOQfid8iOAxzcWYEAQbgoCYiWf6/hT0zIbiYGAJqwzMQ+PvaUOkhEMKuM+KJDEqQJfsvOoA/GEI7EWRNuNcYavlR9fzkK4eYzJlmTeX+qOSRwYt0tyk04zu8WfoCChTHjkYnIoWOGIa2SABYEwgYgpN7twuzXAfdOh1Mku3wLd/z992ous1JI7L0BuRcpI/y6hxUAoZUPU/bsbF0clNvXSGATX4PfvDKfqdquPH1RhufThd/Emvq4VKWR6l3yHRkJ2NY5c3rR9/MImi4rAFUWfezDLMH7+xY3jXILXQdJuz2efZ5zC9dLj8xy2TpXcCgvZa6WlYUaTZYe9VBbB/4FgWxa4cMPn3g3lZtg+5yl9bCG2V+XCNAbylFrWJJSkKcEzaPlXGtnDB797xAntvJaqtb0QxlqlNjhnHT/5xEfG/n2Mw7efvW7Y1mGfO0SNl59Xr0oYDoJ/xkqTW88LzaTYOTjJ9oo+gnGR1c7+c+qid5eDxot+wL6U8l2Ef/1sv/AgAA//9XpU4lewQAAA==

  - path: /etc/ssl/certs/etcd-client.pem
    encoding: gzip+base64
    content: H4sIAAAAAAAA/2SUubKzOBCFc55icmoKAwbboSTEamGLTRcyG8zuDQzCPP3U/aOpmQ5PB193narv79+B2HL8vxAOIsd0EIjwn1QgjoMkAyFwCyvAHQgqxzHdr3VQvtvlOnKDpq73zJx6zn1A8RFSwN0IBwTsLSDHWEA1cS5q0mShXBcqWbABTrDyEwhIBJWPnN7jT6pgbte5T6KKkxYrJMLyKSIaq3NfIFH3r5AurAUTCTA3eGoklHqY10PB3P7ITDVfcUZg/ocMFkJ/wUIWyn1h+d2R+eOFJVPx+07o/Pd0CCkwqgqfwe+ePlFVYQhOJheuz42aMTnyvO1Ig80xIcXe7hFMkRxrUrw8QJcXCRG3hnNLbwSfX26cijqP0PACsd4Lh6/saW95J5pr65sq8kpvZKPe8fvyTcqrXG9K8XN9k7zr6y6dBvaUMP65da3YNdbHnoWhD5bok1N5vLjxyMX3dHDLe6IcnvYW7bFhKskw17ePfJu6QNfkpFDCroSz+HjX6SHeCUGzho0IOhFZ5c1dPnw3BKC58gQUPzqZvLalXmrRHWxK7bjM82AVWTVF6shgfQ9yIkhtfbUh2lfZQ2cqTvaREz/jxrcqcbvZW2KKVLZhi/ladlrsPWMbvndlmzFNehblKVKE4luHTj4a3X6td5W9jfmIAMcAXMiDoJgbVWokweYMqC1BQA1QsYpA8ltl4VJKBAKeFkKjBWhsQk4QARsLhW8rdK6qQTFEPAZg60BAYXU2tbu8vH9o1G62+tu9lP5GOB/m05j5RWCwYekVVcwOmI4RHCcQLBdLWwfp2tGNLWVYD1a5/Hw9fwFfV65Ttgu/H2EN9jxlmp0ExX2p2sLkfld0F4fJwwb1TXxPdnCOCulMhqx+SYc1b6kS34Leq56r7mmCizzfFBsVj9bUfFkuJYHhO6dmIvcf/UzO79Q694qZoLqJ1lOoHkyovHaZbz2umqt+QkGFEvxwu3xELzu6eBm/2C8D7S9omEnp3FBy6ldjuwb6EU35/MCOs8fpmiXG/VEdOvIQ/Juny8cHO8zW7qR0aBW3RTP0ZYnlmZrlm3mqtmCtq1/3MD3d0+VxhW1/JuLbTbthEYU/VsC+8X9T/BMAAP//ZYB5aUYEAAA=

  - path: /etc/ssl/certs/etcd-client-key.pem.enc
    encoding: gzip+base64
    content: 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



